{"ast":null,"code":"var _jsxFileName = \"/Users/omerfarukkose/Desktop/dev/React/movie-app-first/src/pages/Login/LoginPage.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      sign: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"form-img\",\n        src: \"./images/welcome-cat.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        className: \"formik-container\",\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = \"Invalid email address\";\n          }\n\n          return errors;\n        },\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: _ref2 => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n            /* and other goodies */\n\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"input-container\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"text-input\",\n              placeholder: \"Username\",\n              type: \"email\",\n              name: \"email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"text-input\",\n              placeholder: \"Password\",\n              type: \"password\",\n              name: \"password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-form\",\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/omerfarukkose/Desktop/dev/React/movie-app-first/src/pages/Login/LoginPage.js"],"names":["React","Formik","Navbar","LoginPage","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport \"./Login.css\";\n\nfunction LoginPage() {\n  return (\n    <div className=\"login-page\">\n      <Navbar sign />\n      <div className=\"form-container\">\n        <img className=\"form-img\" src=\"./images/welcome-cat.svg\" />\n        <Formik\n        className=\"formik-container\"\n          initialValues={{ email: \"\", password: \"\" }}\n          validate={(values) => {\n            const errors = {};\n            if (!values.email) {\n              errors.email = \"Required\";\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              errors.email = \"Invalid email address\";\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            /* and other goodies */\n          }) => (\n            <form className=\"input-container\" onSubmit={handleSubmit}>\n              <input\n                className=\"text-input\"\n                placeholder=\"Username\"\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email && errors.email}\n              <input\n                className=\"text-input\"\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              {errors.password && touched.password && errors.password}\n              <button className=\"btn-form\" type=\"submit\" disabled={isSubmitting}>\n                Submit\n              </button>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}